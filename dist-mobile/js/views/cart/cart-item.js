define(["jquery","underscore","backbone","text!templates/cart/cart-item.html"],function(e,t,n,r){var i=Backbone.View.extend({tagName:"div",className:"cart-item fx-label",initialize:function(){this.template=t.template(r),t.bindAll(this,"updateSuccessCallback","updateErrorCallback","deleteSuccessCallback","deleteErrorCallback")},events:{"click input.update":"updateQuantity","click input.remove":"removeItem"},updateQuantity:function(){var e=this.model.get("quantity"),t=this.$('input[type="text"]').val();if(e==t)return;this.model.set({quantity:t});if(this.model.isValid()===!1){this.model.set({quantity:0}),this.$('input[type="text"]').val("");return}this.model.save(this.model,{success:this.updateSuccessCallback,error:this.updateErrorCallback})},updateSuccessCallback:function(e,t,n){this.model=e,this.model.updateTotal(),this.render()},updateErrorCallback:function(e,t,n){console.log("update quantity failed"),app.showError("Could not update quantity at this time.")},removeItem:function(){this.model.destroy({success:this.deleteSuccessCallback,error:this.deleteErrorCallback,wait:!0})},deleteSuccessCallback:function(e,t,n){this.remove()},deleteErrorCallback:function(e,t,n){console.log("unable to delete cart item"),app.showError("Could not delete cart item at this time.")},render:function(){return Backbone.Validation.bind(this,{valid:app.utils.valid,invalid:app.utils.invalid,forceUpdate:!0}),this.$el.html(this.template(this.model.toJSON())),this}});return i});